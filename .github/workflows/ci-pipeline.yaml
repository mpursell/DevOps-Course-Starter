name: Continuous Integration
on: 
  push:
    branches:
        - 'master'
    paths-ignore:
      -'./README.md'
      -'./tricks.yaml'
      -'documentation/**'
      -'logs/**'
  
  pull_request:
    paths-ignore:
      -'./README.md'
      -'./tricks.yaml'
      -'documentation/**'
      -'logs/**'

jobs:

  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # only output hash of image and pass that to docker run
      - run: docker run --rm $(docker build -q . --target testing)

  slackNotification:
    name: Slack notification
    runs-on: ubuntu-latest
    environment: Build and Test environment
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification Build & Test
      uses: bryannice/gitactions-slack-notification@2.0.0
      env:
        SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'Build and test workflow running'
        SLACK_TITLE: 'Build and Test Notification'

  azurePublish:
    name: Azure Container Service Publish
    runs-on: ubuntu-latest
    environment: Build and Test environment
    needs: docker
    steps:
      - name: Azure Container Service Publish
        #uses: actions/checkout@v2
        run: curl -dH -X POST ${{ secrets.AZURE_WEBHOOK_URL }}

  docker:
    needs: build
    runs-on: ubuntu-latest
    environment: Build and Test environment
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    
    # Setup docker buildx
    # https://github.com/docker/setup-qemu-action
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build & Push to Docker Hub
      uses: opspresso/action-docker@master
      with:
        args: --docker

      env:
        IMAGE_NAME: mikerp/todoapp
        USERNAME: ${{ secrets.DOCKER_USERNAME }}
        PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        TAG_NAME: "latest"
        BUILDX: "true"
    

  terraform:
    runs-on: ubuntu-latest
    environment: Build and Test environment
    
    steps:
    - name: checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    # - name: login to Azure CLI
    #   run: az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
    #   shell: bash
    
    - name: run terraform init
      run: terraform init 
      shell: bash
      env:
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

 
    - name: run terraform apply
      run: terraform apply -auto-approve
      shell: bash
      env:
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
        TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
        TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
        TF_VAR_GH_CLIENTID: ${{ secrets.GH_CLIENTID }}
        TF_VAR_GH_ClIENTSECRET: ${{ secrets.GH_CLIENTSECRET }}
        TF_VAR_DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        TF_VAR_DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        TF_VAR_FLASK_APP: ${{ secrets.FLASK_APP }}
        TF_VAR_FLASK_ENV: ${{ secrets.FLASK_ENV }}
        TF_VAR_SECRET_KEY: ${{ secrets.SECRET_KEY }}


    
    - name: Webhook
      run: curl -dH -X POST "$(terraform output -raw webhook_url)"
      shell: bash
      env:
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

    





